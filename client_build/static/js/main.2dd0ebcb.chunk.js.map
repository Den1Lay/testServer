{"version":3,"sources":["constants/ActionTypes.js","store/reducers/cart.js","store/reducers/products.js","store/reducers/dialogs.js","store/reducers/index.js","core/axios.js","core/api/auth.js","utils/notification.js","utils/upFirstSimbol.js","actions/network.js","actions/index.js","store/index.js","view/components/Bread/index.js","view/components/Search/index.js","view/components/Target/index.js","view/components/CheckTags/index.js","view/components/Message/index.js","view/components/DateElement/index.js","view/pages/ChoosePage/layout/Header/index.js","view/containers/ChooseBoard/index.js","view/containers/Login/index.js","view/containers/Dialog/view.js","view/containers/Dialog/wrappers/base.js","view/containers/Dialog/wrappers/searchPeople.js","view/containers/TextReducer/index.js","view/pages/ChoosePage/layout/Main/index.js","view/pages/ChoosePage/index.js","view/pages/PreviewPage/index.js","view/pages/ResultPage/index.js","view/pages/TestPage/index.js","view/pages/LoginPage/index.js","view/pages/MessengerPage/layout/Chat/index.js","view/pages/MessengerPage/layout/DialogsTab/index.js","view/pages/MessengerPage/layout/Navigation/index.js","view/pages/MessengerPage/layout/ChatHeader/index.js","view/pages/MessengerPage/layout/DialogsSearch/index.js","view/pages/MessengerPage/index.js","view/App.js","index.js"],"names":["ADD_TO_CART","CHECKOUT_REQUEST","CHECKOUT_SUCCESS","CHECKOUT_FAILURE","MICRO_EVENT","ADD_ELEMENT","PRIVATE_MSG","JOIN_TO_ROOM","GET_MSGS","INIT","PICK_DIALOG","SET_DIALOG_TAB_MOD","SET_SEARCH_PEOPLE","CREATE_NEW_DIALOG","CREATE_MESSAGE","SET_MESSAGE","SET_DIALOG","initialState","addedIds","quantityById","state","action","type","indexOf","productId","cart","console","log","defState","products","window","localStorage","testData","JSON","parse","reg","RegExp","data","replace","split","res","recurs","pass","path","name","splice","Math","random","length","count","floor","min","elems","push","payload","forEach","A","B","C","passData","stringify","prepareTestData","microElsDefState","elements","combineReducers","productsEvents","microEls","hasOwnProperty","defaultStatus","room","lastMessage","addres","message","v","dialogs","user","isAuth","testUser","_id","loginName","nickName","last_seen","Date","now","online","testDialogs","dialog","author","partner","messages","text","poll","createdAt","readed","choosenDialogId","readyMessengesData","dialogTabMod","searchPeople","newDialogTargetId","messageData","getV","str","testFormatMessages","sort","aCT","bCT","lastDate","mounth","day","i","workDate","newLastDate","getMonth","getDate","date","getStringDate","getEndpointMessage","time","getHours","getMinutes","isMe","msg","userId","dialogInd","dialogId","targetUserId","mod","id","resInd","findThatDialog","axios","defaults","baseURL","headers","common","token","post","openNotification","title","description","notification","upFirstSimbol","string","charAt","toUpperCase","substring","dataInit","types","effecter","status","isTokenLogin","dispatch","pickDialog","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","socket","io","transports","on","ev","emit","setSearchPeople","target","setDialog","setMessage","reason","subscribe","getState","lastRooms","rooms","Bread","props","paths","useLocation","pathname","readyPaths","arr","sumPath","pathDls","preparePaths","className","map","to","Search","Target","onClick","src","history","useHistory","location","classNames","CheckableTag","Tag","CheckTags","fValue","sValue","fHandl","sHandl","checkParam","checked","Message","styleEffect","DateElement","CPHeader","connect","link","addElement","obj","ChooseBoard","rightPass","useState","routes","setRoutes","ar","getLastElem","mapDispatchToProps","createUser","auth","then","catch","er","loginUser","checkAuth","workPlace","setWorkPlace","password","passwordConfirm","setData","useEffect","from","chechProps","onSubmit","preventDefault","errors","error","placeholder","onChange","value","Password","htmlType","DialogView","imgPlug","messange","infoCount","messageDls","authorIsYou","isSearchPeopleMod","isChoosen","clickHandler","showData","me","choosenId","showTarget","revMessages","reverse","resCount","deathFlag","getUnreadedCount","choosenUserId","TextReducer","wrapperRef","useRef","targetRef","originalText","setOriginalText","ready","changed","textData","setTextData","wrapperH","current","clientHeight","targetH","resStr","textWithSpace","ref","CPMain","microEvent","another","PreviewPage","propsArr","Object","keys","privateMsg","joinToRoom","getMsgs","setMsg","setAddres","setRoom","clear","TextArea","Input","createMessage","inputValue","setInputValue","dialogIsPicked","autoSize","createNewDialog","dialogsComponents","dialogData","showDialogs","searchPeopleClickHandler","some","searchPeoples","searchUser","setDialogTabMod","searchValue","setSearchValue","isSearch","bordered","onFocus","onPressEnter","CloseOutlined","App","exact","MessengerPage","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dd0ebcb.chunk.js","sourcesContent":["export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\r\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\r\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\r\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\r\nexport const MICRO_EVENT = 'MICRO_EVENT'\r\nexport const ADD_ELEMENT = 'ADD_ELEMENT'\r\nexport const PRIVATE_MSG = 'PRIVATE_MSG'\r\nexport const JOIN_TO_ROOM = 'JOIN_TO_ROOM'\r\nexport const GET_MSGS = 'GET_MSGS'\r\nexport const CREATE_DIALOG = 'CREATE_DIALOG'\r\nexport const INIT = 'INIT'\r\nexport const PICK_DIALOG = 'PICK_DIALOG'\r\nexport const SET_DIALOG_TAB_MOD = 'SET_DIALOG_TAB_MOD'\r\nexport const SET_SEARCH_PEOPLE = 'SET_SEARCH_PEOPLE'\r\nexport const CREATE_NEW_DIALOG = 'CREATE_NEW_DIALOG'\r\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE'\r\nexport const SET_MESSAGE = 'SET_MESSAGE'\r\nexport const SET_DIALOG = 'SET_DIALOG'\r\nexport const JOIN_ROOM = 'JOIN_ROOM'","import {\r\n  ADD_TO_CART,\r\n  CHECKOUT_REQUEST,\r\n  CHECKOUT_FAILURE,\r\n  CHECKOUT_SUCCESS\r\n} from '@/constants/ActionTypes'\r\n\r\nconst initialState = {\r\n  addedIds: [],\r\n  quantityById: {}\r\n}\r\n\r\nconst addedIds = (state = initialState.addedIds, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if (state.indexOf(action.productId) !== -1) {\r\n        return state\r\n      }\r\n      return [ ...state, action.productId ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst quantityById = (state = initialState.quantityById, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const { productId } = action\r\n      return { ...state,\r\n        [productId]: (state[productId] || 0) + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getQuantity = (state, productId) =>\r\n  state.quantityById[productId] || 0\r\n\r\nexport const getAddedIds = state => state.addedIds\r\n\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHECKOUT_REQUEST:\r\n      return initialState\r\n    case CHECKOUT_FAILURE:\r\n      return action.cart\r\n    case CHECKOUT_SUCCESS:\r\n      console.log('%c%s', 'color: red; font-size: 15px;', 'SUCCESS_SEND')\r\n      return initialState\r\n    default:\r\n      return {\r\n        addedIds: addedIds(state.addedIds, action),\r\n        quantityById: quantityById(state.quantityById, action)\r\n      }\r\n  }\r\n}\r\n\r\nexport default cart\r\n","import { combineReducers } from 'redux'\r\nimport {  MICRO_EVENT, ADD_ELEMENT } from '@/constants/ActionTypes'\r\n\r\nconst prepareTestData = () => {\r\n\r\n  const workStr = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n\r\n  const reg = new RegExp('[.]|[,]', 'g');\r\n\r\n  const data = workStr.replace(reg, '').split(' ');\r\n\r\n  let res = []\r\n\r\n  function recurs(pass, path) {\r\n    let name;\r\n    if(pass) {\r\n      name = pass\r\n    } else name = data.splice(0, 1)[0];\r\n    \r\n    if(Math.random() > 0.5 && data.length) {\r\n      let count = Math.floor(Math.min(Math.random()*5, data.length-1))+1;\r\n      let elems = data.splice(0, count);\r\n\r\n      path.push({ name, type:'dir',\r\n        payload: []\r\n      })\r\n      \r\n      elems.forEach(name => recurs(name, path[path.length-1].payload))\r\n\r\n    } else {\r\n      path.push({name, type: 'target', payload: {\r\n        A: Math.random(),\r\n        B: Math.random(),\r\n        C: Math.random()\r\n      }})\r\n    }\r\n  }\r\n\r\n  while(data.length) {\r\n    recurs(null, res)\r\n  }\r\n\r\n  let passData = {name: 'main', type: 'dir', payload: res};\r\n  window.localStorage.testData = JSON.stringify(passData);\r\n  return passData;\r\n}\r\n\r\n\r\nlet parsed = window.localStorage?.testData ?\r\nJSON.parse(window.localStorage?.testData) : prepareTestData() \r\n\r\nconst defState = {\r\n  products: parsed,\r\n}\r\n\r\nconst productsEvents = (state = defState, {type, payload}) => {\r\n  switch(type) {\r\n    case MICRO_EVENT: \r\n      return (() => {\r\n        return state+payload\r\n      })()\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst microElsDefState = {\r\n  elements: {}\r\n}\r\n\r\nconst microEls = (state = microElsDefState, {type, payload}) => {\r\n  switch(type) {\r\n    case ADD_ELEMENT: \r\n      debugger\r\n      return (() => {\r\n        const {name, A, B, C} = payload;\r\n\r\n        if(state.elements.hasOwnProperty(name)) {\r\n          state.elements[name].count++;\r\n        } else {\r\n          state.elements[name] = {A, B, C, count: 1}\r\n        }\r\n        return state\r\n      })();\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default combineReducers({\r\n  productsEvents,\r\n  microEls\r\n})\r\n\r\n\r\n","// STATE.V всегда должен быть новым, а иначе старые действия повторяться... \r\n\r\nimport { \r\n  PRIVATE_MSG, \r\n  JOIN_TO_ROOM, \r\n  GET_MSGS, \r\n  INIT,\r\n  PICK_DIALOG,\r\n  SET_DIALOG_TAB_MOD,\r\n  SET_SEARCH_PEOPLE,\r\n  CREATE_NEW_DIALOG,\r\n  CREATE_MESSAGE,\r\n  SET_MESSAGE,\r\n  SET_DIALOG,\r\n  JOIN_ROOM\r\n} from '@/constants/ActionTypes'\r\nimport { message } from 'antd';\r\n\r\nconst defaultStatus = {\r\n  room: '',\r\n  lastMessage: {addres: '', message: ''},\r\n  v: '',\r\n  dialogs: [],\r\n  user: null,\r\n  isAuth: false,\r\n  testUser: {\r\n    _id: '222',\r\n    loginName: 'Ares',\r\n    nickName: 'Ares416',\r\n    last_seen: Date.now(),\r\n    online: true,\r\n  },\r\n  testDialogs: [{\r\n    dialog: {\r\n      _id: '416', \r\n      author: {\r\n        _id: '55555',\r\n        loginName: 'mainBuilder',\r\n        nickName: 'Hefest',\r\n        last_seen: Date.now(),\r\n        online: false,\r\n      } ,\r\n      partner: \r\n      {\r\n        _id: '222',\r\n        loginName: 'Ares',\r\n        nickName: 'Ares416',\r\n        last_seen: Date.now(),\r\n        online: true,\r\n      }\r\n    },\r\n    messages: [ \r\n      {\r\n        _id: '4444',\r\n        text: 'Pellentesque faucibus aliquam vehicula.',\r\n        author: '55555',\r\n        poll: '',\r\n        createdAt: 1622567732877,\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '777',\r\n        text: 'Etiam ex libero, suscipit eget ullamcorper et, iaculis ut quam. Aliquam a augue vitae dui dapibus placerat. ',\r\n        author: '222',\r\n        poll: '',\r\n        createdAt: 1622567732877,\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '4444',\r\n        text: 'Praesent finibus elit id nulla pharetra commodo. Mauris aliquet urna arcu. In hac habitasse platea dictumst.',\r\n        author: '55555',\r\n        poll: '',\r\n        createdAt: 1629479732877,\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '4444',\r\n        text: 'Maecenas eu consectetur nibh.',\r\n        author: '55555',\r\n        poll: '',\r\n        createdAt: 1629479732877,\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '4444',\r\n        text: 'Can you read lorem text?',\r\n        author: '55555',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '777',\r\n        text: 'That metall looks pretty good',\r\n        author: '222',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      }\r\n    ]\r\n  }],\r\n  choosenDialogId: null,\r\n  readyMessengesData: [],\r\n  dialogTabMod: 'base',\r\n  searchPeople: [],\r\n  newDialogTargetId: null,\r\n  messageData: {},\r\n}\r\n\r\nexport default (state = defaultStatus, {type, payload}) => {\r\n  switch(type) {\r\n    case PRIVATE_MSG: \r\n      return (() => {\r\n        const {msg, addres} = payload;\r\n\r\n        state.lastMessage = {addres, message: msg}\r\n        state.v = getV('m')\r\n        \r\n        return state\r\n      })()\r\n    case JOIN_TO_ROOM:\r\n      return (() => {\r\n        const {room} = payload;\r\n\r\n        state.room = room;\r\n        state.v = getV('r')\r\n        \r\n        return state \r\n      })()\r\n    case GET_MSGS: // в отдельный сокетовый редюсер\r\n      return (() => {\r\n        state.v = getV('g')\r\n\r\n        return state\r\n      })()\r\n    // case JOIN_ROOM:\r\n    //   return (() => {\r\n    //     debugger\r\n    //     \r\n\r\n    //     state.newDialogTargetId = userId\r\n    //     state.v = getV('joinRoom')\r\n    //     return state\r\n    //   })()\r\n    case CREATE_NEW_DIALOG: // в отдельный сокетовый редюсер\r\n      // может вызваться по персонажу с существующим диалогом\r\n      return (() => {\r\n        const { userId } = payload\r\n\r\n        state.newDialogTargetId = userId\r\n        state.v = getV('createDialog')\r\n        return state;\r\n      })()\r\n    case SET_DIALOG: \r\n      return (() => {\r\n        const { dialog } = payload\r\n\r\n        state.dialogs.push({\r\n          dialog,\r\n          messages: []\r\n        })\r\n\r\n        state.v = getV()\r\n        return state\r\n      })()\r\n    case CREATE_MESSAGE:\r\n      return (() => {\r\n        \r\n        const { text } = payload;\r\n        const dialog = (() => {\r\n          let dialogInd = -1;\r\n          let i = -1;\r\n          while(++i < state.dialogs.length) {\r\n            if(state.choosenDialogId === state.dialogs[i].dialog['_id']) {\r\n              dialogInd = i;\r\n              break\r\n            }\r\n          }\r\n          return state.dialogs[dialogInd].dialog\r\n        })()\r\n\r\n        state.messageData = {\r\n          poll: dialog.poll,\r\n          dialogId: dialog['_id'],\r\n          userId: state.user['_id'],\r\n          targetUserId: dialog.author['_id'] === state.user['_id'] \r\n            ? dialog.partner['_id'] : dialog.author['_id'],\r\n          text\r\n        }\r\n        state.v = getV('createMessage')\r\n        return state;\r\n      })()\r\n    case SET_MESSAGE: \r\n      return (() => {\r\n        const { message, dialogId } = payload\r\n\r\n        let dialogInd = -1;\r\n        let i = -1;\r\n        while(++i < state.dialogs.length) {\r\n          if(state.dialogs[i].dialog['_id'] === dialogId) {\r\n            dialogInd = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        state.dialogs[dialogInd].messages.push(message);\r\n\r\n        if(dialogId === state.choosenDialogId) {\r\n          state.readyMessengesData = testFormatMessages(state.dialogs[dialogInd], state.user)\r\n        }\r\n        \r\n        state.v = getV();\r\n        return state\r\n      })()\r\n    case INIT: \r\n      return (() => {\r\n        let {dialogs, user} = payload;\r\n\r\n        state = {...state, dialogs, user, isAuth: true}\r\n        state.v = getV('init')\r\n\r\n        return state\r\n      })()\r\n    case SET_DIALOG_TAB_MOD: // можно отделить\r\n      return (() => {\r\n        const { mod } = payload\r\n        if(mod === 'search') {\r\n          state.dialogTabMod = 'search'\r\n          state.v = getV('searchPeople')\r\n        } else if (mod === 'base') {\r\n          state.dialogTabMod = 'base'\r\n          state.v = getV()\r\n        }\r\n        return state\r\n      })()\r\n    case SET_SEARCH_PEOPLE:\r\n      return (() => {\r\n        const { data } = payload\r\n        \r\n        state.searchPeople = data\r\n        state.v = getV()\r\n\r\n        return state\r\n      })()\r\n    case PICK_DIALOG:\r\n      return (() => {\r\n        const { _id, dialog } = payload\r\n        \r\n        // Вызов через поиск диалогов.\r\n        if(dialog !== null) {\r\n          state.dialogs.push({\r\n            dialog, \r\n            messages: []\r\n          })\r\n        }\r\n\r\n        state.choosenDialogId = _id;\r\n\r\n        function findThatDialog(dialogs, id) {\r\n          let resInd = -1;\r\n\r\n          let i = -1;\r\n          while(++i < dialogs.length) {\r\n            if(dialogs[i].dialog['_id'] === id) {\r\n              resInd = i;\r\n              break\r\n            }\r\n          }\r\n          return resInd\r\n        }\r\n\r\n        let dialogInd = findThatDialog(state.dialogs, _id);\r\n\r\n        const readyMessengesData = testFormatMessages(state.dialogs[dialogInd], state.user)\r\n\r\n        state.readyMessengesData = readyMessengesData;\r\n        state.v = getV()\r\n\r\n        return state\r\n      })()\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nfunction getV(str='') { return `${str}$$${Math.random()}` }\r\n\r\nfunction testFormatMessages({ messages: messagesPass }, user) {\r\n  \r\n  const messages = messagesPass\r\n  .sort(({createdAt: aCT}, {createdAt: bCT}) => {\r\n    if (new Date(aCT) > new Date(bCT)) {\r\n      return 1\r\n    } else {\r\n      return -1\r\n    }\r\n  })\r\n\r\n  const res = [];\r\n  \r\n  let lastDate = {mounth: null, day: null};\r\n\r\n  let i = -1;\r\n  while(++i < messages.length) {\r\n    const { createdAt } = messages[i]\r\n    const workDate = new Date(createdAt);\r\n    const newLastDate = {\r\n      mounth: workDate.getMonth(), \r\n      day: workDate.getDate()\r\n    }\r\n\r\n    if(\r\n      (lastDate.mounth !== newLastDate.mounth) || \r\n      (lastDate.day !== newLastDate.day)\r\n    ) {\r\n      // новая пачка\r\n      lastDate = newLastDate;\r\n      res.push({\r\n        date: getStringDate(newLastDate), \r\n        messages: [getEndpointMessage(messages[i], user)]\r\n      })\r\n    } else {\r\n      // пуш сообщения в старую пачку\r\n      res[res.length - 1].messages.push(\r\n        getEndpointMessage(messages[i], user)\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  debugger\r\n\r\n  return res\r\n\r\n  function getStringDate ({mounth, day}) {\r\n    const mounthNames = {\r\n      '0': 'January ',\r\n      '1': 'February',\r\n      '2': 'March',\r\n      '3': 'April',\r\n      '4': 'May',\r\n      '5': 'June',\r\n      '6': 'Jule',\r\n      '7': 'August',\r\n      '8': 'September',\r\n      '9': 'October',\r\n      '10': 'November',\r\n      '11': 'December'\r\n    }\r\n    return `${day} ${mounthNames[mounth+'']}`\r\n  }\r\n\r\n  function getEndpointMessage(messages, user) {\r\n    const { text, author, createdAt, readed } = messages\r\n    const workDate = new Date(createdAt);\r\n    const resTime = `${workDate.getHours()}:${workDate.getMinutes()}`\r\n    const resObject = {\r\n      time: resTime,\r\n      text, \r\n      isMe: author === user['_id'],\r\n      readed\r\n    }\r\n    return resObject\r\n  }\r\n  \r\n}","import { combineReducers } from 'redux'\r\nimport cart from './cart'\r\nimport products from './products'\r\nimport dialogs from './dialogs'\r\n\r\nexport default combineReducers({\r\n  cart,\r\n  products,\r\n  dialogs\r\n})\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\naxios.defaults.headers.common['token'] = localStorage.token;\r\n\r\nwindow.axios = axios;\r\n\r\nexport default axios;","import axios from '../axios';\r\n\r\nexport default {\r\n  login: (data) => axios.post('/auth/login', data),\r\n  register: (data) => axios.post('/auth/register', data),\r\n  checkToken: () => axios.post('/auth/check') \r\n}","import { notification } from 'antd'\r\n\r\nconst openNotification = ({type, title, description}) => {\r\n  notification[type]({\r\n    message: title, \r\n    description\r\n  })\r\n}\r\n\r\nexport default openNotification","const upFirstSimbol = (string) => {\r\n  return string.charAt(0).toUpperCase()+string.substring(1);\r\n}\r\n\r\nexport default upFirstSimbol","import { auth } from '@/core/api';\r\nimport { openNotification, upFirstSimbol } from '@/utils'\r\nimport * as types from '@/constants/ActionTypes';\r\n \r\nconst dataInit = payload => ({\r\n  type: types.INIT,\r\n  payload\r\n})\r\n\r\nconst effecter = ({status, token, data, message}, isTokenLogin = false) => dispatch => {\r\n  if(status === 'success') {\r\n    localStorage.token = token;\r\n    window.axios.defaults.headers.common['token'] = token;\r\n    openNotification({type: status, title: upFirstSimbol(status), description: message});\r\n    // socket.emit('JOIN')\r\n    console.log('ALIVE_EFFECTER')\r\n    dispatch(dataInit(data))\r\n  } else {\r\n    openNotification({type: status, title: upFirstSimbol(status), description: message})\r\n    isTokenLogin && delete localStorage.token\r\n  }\r\n}\r\n\r\nexport const loginUser = data => dispatch => {\r\n  auth.login(data).then(({data}) => {\r\n    console.log('%c%s', 'font-size: 22px; color: navy;', 'SERVER_RES')\r\n    console.log('RES:', data);\r\n\r\n    effecter(data)(dispatch)\r\n  }).catch(er => {\r\n    console.log('%c%s', 'color: red;font-size:22px;', 'AXIOS_LOGIN_ERR:', er)\r\n  })\r\n}\r\n\r\nexport const createUser = data => dispatch => {\r\n  auth.register(data).then(({data}) => {\r\n    console.log('%c%s', 'font-size: 22px; color: navy;', 'SERVER_RES')\r\n    console.log('RES_DEST:', data);\r\n\r\n    effecter(data)(dispatch)\r\n  }).catch(er => {\r\n    console.log('%c%s', 'color: red;font-size:22px;', 'AXIOS_REGISTER_ERR:', er)\r\n  })\r\n}\r\n\r\nexport const checkAuth = () => dispatch => {\r\n  auth.checkToken().then(({data}) => {\r\n    \r\n    console.log('%c%s', 'font-size: 22px; color: navy;', 'SERVER_RES')\r\n    console.log('RES_CHECK:', data);\r\n\r\n    effecter(data, true)(dispatch)\r\n  })\r\n  .catch(er => {\r\n    console.log('%c%s', 'color: red;font-size:22px;', 'AXIOS_AUTO_LOGIN_ERR:', er)\r\n  })\r\n}\r\n\r\n/* \r\nИмееться \"работающая\" авторизация на сервере.. данные доходят, но дальще\r\nне обрабатываются. JWT функционирует нормально. Необходимо обновлять Axios.headers\r\nв ручную, а иначе он поднимает старый токен.\r\n\r\nЛогин так же успешно работает и доставляет необходимую информацию.\r\n\r\n*/","import * as types from '../constants/ActionTypes'\r\n\r\nexport const microEvent = () => ({\r\n  type: types.MICRO_EVENT,\r\n  payload: Math.random()\r\n})\r\n\r\nexport const addElement = (obj) => ({\r\n  type: types.ADD_ELEMENT,\r\n  payload: obj\r\n})\r\n\r\nexport const privateMsg = (payload) => ({\r\n  type: types.PRIVATE_MSG, \r\n  payload\r\n})\r\n\r\nexport const joinToRoom = (payload) => ({\r\n  type: types.JOIN_TO_ROOM,\r\n  payload\r\n})\r\n\r\nexport const getMsgs = () => ({\r\n  type: types.GET_MSGS\r\n})\r\n\r\nexport const pickDialog = (_id, dialog = null) => ({\r\n  type: types.PICK_DIALOG,\r\n  payload: { _id, dialog }\r\n})\r\n\r\nexport const setDialogTabMod = (mod) => ({\r\n  type: types.SET_DIALOG_TAB_MOD,\r\n  payload: { mod }\r\n})\r\n\r\nexport const setSearchPeople = (data) => ({\r\n  type: types.SET_SEARCH_PEOPLE,\r\n  payload: { data }\r\n})\r\n\r\nexport const createNewDialog = (id = null) => ({\r\n  type: types.CREATE_NEW_DIALOG,\r\n  payload: { userId: id }\r\n})\r\n\r\nexport const createMessage = (text) => ({\r\n  type: types.CREATE_MESSAGE,\r\n  payload: { text }\r\n})\r\n\r\nexport const setMessage = (message, dialogId) => ({\r\n  type: types.SET_MESSAGE,\r\n  payload: { message, dialogId }\r\n})\r\n\r\nexport const setDialog = (dialog) => ({\r\n  type: types.SET_DIALOG,\r\n  payload: { dialog }\r\n})\r\n\r\nexport const joinRoom = userId => ({\r\n  type: types.JOIN_ROOM,\r\n  payload: { userId }\r\n})\r\n\r\nexport {createUser, loginUser, checkAuth} from './network'","import { io } from 'socket.io-client';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport { createLogger } from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducers'\r\n\r\nimport { setSearchPeople, pickDialog, setMessage, setDialog } from '@/actions'\r\n\r\nconst middleware = [ thunk ];\r\nif (process.env.NODE_ENV !== 'production') {\r\n  middleware.push(createLogger());\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n)\r\n\r\nconst socket = io('http://localhost:3000', {transports: ['websocket', 'p']}); \r\n\r\nsocket\r\n  .on('connect', (ev) => {\r\n    socket.emit('MSG', {data: 'pass', token: \"123\"})\r\n  })\r\n  .on('CLIENT_MSG', (pass) => {\r\n    console.log('%c%s', 'font-size: 22px; color: red;', pass)\r\n  })\r\n  .on('RES_PRIVATE_MSG', (pass) => {\r\n    console.log('%c%s', 'font-size: 22px; color: navy;', 'PRIVATE_MSG');\r\n    console.log('Message:', pass);\r\n\r\n    \r\n    // cb()\r\n  })\r\n  .on('RES_MSGS', data =>  {\r\n    console.log('%c%s', 'font-size: 22px; color: aqua;', 'GET_MSGS');\r\n    console.log('Data:', data)\r\n  })\r\n  .on('RES_PEOPLE', data => {\r\n    store.dispatch(setSearchPeople(data))\r\n  })\r\n  .on('RES_NEW_DIALOG', ({dialog, target}) => {\r\n    if(target === 'me') {\r\n      store.dispatch(pickDialog(dialog['_id'], dialog))\r\n    } else {\r\n      store.dispatch(setDialog(dialog))\r\n    }\r\n    \r\n  })\r\n  .on('RES_MESSAGE', ({message, dialogId}) => {\r\n    store.dispatch(setMessage(message, dialogId))\r\n  })\r\n  \r\n  .on('disconnect', (reason) => {\r\n    console.log('%c%s', 'font-size: 22px; color: crimson;', 'DISCON:')\r\n    console.log('Reason:',reason);\r\n  })\r\n\r\n\r\nlet lastV = '';\r\n\r\nstore.subscribe(() => {\r\n  const freshState = store.getState();\r\n  const {\r\n    lastMessage: {addres, message}, \r\n    room,  \r\n    v,\r\n    newDialogTargetId,\r\n    messageData,\r\n  } = freshState.dialogs;\r\n\r\n  const token = localStorage.token;\r\n\r\n  // какого черта это было... Почему он проходил?\r\n  if(lastV !== v) {\r\n    \r\n    let checkSimbol = v.split('$$')[0];\r\n    \r\n    switch(checkSimbol) {\r\n      case 'r': \r\n        (() => {\r\n          \r\n          socket.emit('JOIN_ROOM', { token, room }, (data) => {\r\n            console.log('%c%s', 'font-size: 22px; color: green;', 'SUCCESS_JOIN');\r\n            console.log('Rooms:', data);\r\n          })\r\n\r\n        })();\r\n        break;\r\n      case 'm': \r\n        (() => {\r\n         \r\n          socket.emit('PRIVATE_MSG', {\r\n            token,\r\n            payload: { addres, message }\r\n          }, (lastRooms) => {\r\n            console.log('%c%s', 'font-size: 22px; color: green;', 'SUCCESS_SEND_MSG');\r\n            console.log('%c%s', 'font-size: 22px; color: aqua;', 'LAST_ROOMS:', lastRooms)\r\n          })\r\n          \r\n        })();\r\n        break;\r\n      case 'g':\r\n        (() => {\r\n          console.log('SUB')\r\n          socket.emit('GET_MSGS', {\r\n            token\r\n          });\r\n        })()\r\n        break;\r\n      case 'init':\r\n        (() => {\r\n          socket.emit('JOIN', { token }, (rooms) => {\r\n            console.log('%c%s', 'font-size: 22px; color: green;', 'SUCCESS_JOIN', rooms);\r\n          })\r\n        })();\r\n        break\r\n      case 'searchPeople':\r\n        (() => {\r\n          socket.emit('GET_PEOPLE', {\r\n            token\r\n          })\r\n        })()\r\n        break\r\n      // case 'joinRoom':\r\n      //   debugger\r\n      //   (() => {\r\n      //     socket.emit('JOIN_ROOM', {\r\n      //       token, room: newDialogTargetId,\r\n      //     })\r\n      //   })()\r\n      //   break\r\n      case 'createDialog': \r\n        (() => {\r\n          socket.emit('CREATE_NEW_DIALOG', {\r\n            token,\r\n            newDialogTargetId\r\n          })\r\n          \r\n        })()\r\n        break\r\n      case 'createMessage': \r\n        (() => {\r\n          socket.emit('CREATE_MESSAGE', {...messageData, token})\r\n        })()\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n})\r\n  \r\n\r\nexport default store","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useLocation, Link } from 'react-router-dom'\r\n\r\nimport './Bread.scss'\r\n\r\nconst Bread = props => {\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const paths = pathname.split('/').splice(1)\r\n  \r\n  function preparePaths(arr = paths) {\r\n    const res = [];\r\n    let i = -1;\r\n\r\n    let sumPath = ''\r\n\r\n    while(++i < arr.length) {\r\n      let pathDls = `/${arr[i]}`;\r\n      res.push({text: arr[i], path: sumPath+pathDls});\r\n\r\n      sumPath+=pathDls;\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  const readyPaths = preparePaths()\r\n  debugger\r\n  return (\r\n    <div className={'bread'}>\r\n      {readyPaths.map(({path, text}) => \r\n      <li className={'bread_links'}>\r\n        <Link to={path}>{text}</Link>\r\n      </li>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nBread.propTypes = {\r\n\r\n}\r\n\r\nexport default Bread\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Search = props => {\r\n  return (\r\n    <div>\r\n      {\"Search\"}\r\n    </div>\r\n  )\r\n}\r\n\r\nSearch.propTypes = {\r\n\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './Target.scss'\r\n\r\nconst Target = ({onClick, text, src = null, type}) => {\r\n  console.log('RENDER_Target');\r\n\r\n  const history = useHistory();\r\n  const path = `${history.location.pathname}/${text}`;\r\n\r\n  function clickHandler() {\r\n    if(type === 'dir') {\r\n      history.push(path)\r\n    } else {\r\n      onClick();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={classNames('target', type === 'target' && 'clickable')} \r\n        onClick={clickHandler}>\r\n      {\r\n        src ? <img src={src} /> : null\r\n      }\r\n      <div className={'target_text'}>\r\n        {text}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTarget.propTypes = {\r\n\r\n}\r\n\r\nexport default Target\r\n","import React from 'react'\r\n\r\nimport { Tag } from 'antd'\r\n\r\nimport './CheckTags.scss';\r\n\r\nconst { CheckableTag } = Tag;\r\nconst CheckTags = ({fValue, sValue, fHandl, sHandl, checkParam}) => {\r\n\r\n  return (\r\n    <div className='checkTags'>\r\n      <CheckableTag \r\n        onClick={() => !checkParam && fHandl()}\r\n        checked={checkParam}>\r\n        {fValue}\r\n      </CheckableTag>\r\n      <CheckableTag\r\n        onClick={() => checkParam && sHandl()}\r\n        checked={!checkParam}>\r\n        {sValue}\r\n      </CheckableTag>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckTags","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport './Message.scss'\r\n\r\nconst Message = ({text, time, isMe = true, readed = false}) => {\r\n\r\n  const styleEffect = isMe?'-isMe':'-isPartner'\r\n  return (\r\n    <section className={classNames('message', `message${styleEffect}`)}>\r\n      <div className={classNames('message__cloud', `message__cloud${styleEffect}`)}>\r\n        <div className={'message__cloud_payload'}>\r\n          {text}\r\n        </div>\r\n        <div className={classNames('message__cloud_time', `message__cloud_time${styleEffect}`)}>\r\n          {time}\r\n        </div>\r\n      </div>\r\n      {(isMe && !readed) ? <div className={'message__unreaded'} >{''}</div> : null}\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default Message","import React from 'react'\r\n\r\nimport './DateElement.scss'\r\n\r\nconst DateElement = ({date='13 February'}) => {\r\n  return (\r\n    <section className='dateElement'>\r\n      <div className='dateElement__target'>\r\n        {date}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DateElement\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Bread } from '@@/components'\r\n\r\nimport './Header.scss'\r\n\r\nconst CPHeader = props => {\r\n  return (\r\n    <section className={'cPHeader'}>\r\n      <div className={'cPHeader_rightSpace'} />\r\n        <div className={'cPHeader__main'}>\r\n          <Bread />\r\n        </div>\r\n        <div className={'cPHeader_rightSpace'}>\r\n          <Link to={'/result'} >{\"Result\"}</Link>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nCPHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default CPHeader\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Route, Switch, useLocation } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Target } from '@@/components'\r\n\r\nimport { addElement } from '@/actions';\r\n\r\nimport './ChooseBoard.scss'\r\n\r\nconst ChooseBoard = (\r\n  {\r\n    productsEvents = {}, \r\n    rightPass = false, \r\n    link = false, \r\n    \r\n    addElement\r\n  }) => {\r\n\r\n  const products = productsEvents?.products || null\r\n  if(!rightPass) {\r\n    rightPass = products\r\n  }\r\n\r\n  const [routes, setRoutes] = useState(null)\r\n\r\n  // let str = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent lobortis quis libero non luctus.'\r\n\r\n  // const reg = new RegExp('[.]|[,]', 'g')\r\n\r\n  // const data = str.replace(reg, '').split(' ')\r\n  const { pathname } = useLocation();\r\n\r\n  const getLastElem = path => {let ar = path.split('/'); return ar[ar.length-1]}\r\n\r\n\r\n  if(routes === null) {\r\n    let res = rightPass.payload.map(({name, type}, i) => {\r\n      return type === 'dir' \r\n      ? <Route path={`${pathname}/${name}`}>\r\n        <ChooseBoard rightPass={rightPass.payload[i]} link={name} addElement={addElement}/>\r\n      </Route>\r\n      : null\r\n    });\r\n\r\n    setRoutes(res);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { rightPass.name === getLastElem(pathname) ?\r\n          <div className={'chooseBoard'}>\r\n            {rightPass.payload.map(({name, type, payload}) => {\r\n              return <Target text={name} type={type} onClick={() => addElement({name, ...payload})} />\r\n            })}\r\n          </div>\r\n        : null\r\n      }\r\n      \r\n      <Switch>\r\n        {routes}\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nChooseBoard.propTypes = {\r\n\r\n}\r\n\r\nconst mapState = ({products}, {link}) => {\r\n  debugger\r\n  return {\r\n    productsEvents: !link ? products.productsEvents : {products: false}\r\n  }\r\n}\r\n\r\nexport default connect(mapState, {addElement})(ChooseBoard);\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport { createUser, loginUser, checkAuth } from '@/actions'\r\n\r\nimport { Button, Input, message } from 'antd'\r\nimport { CheckTags } from '@@/components'\r\n\r\nimport './Login.scss';\r\n\r\nexport const LoginPage = (\r\n  { isAuth,\r\n\r\n    createUser, \r\n    loginUser, \r\n    checkAuth \r\n  }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [workPlace, setWorkPlace] = useState('create');\r\n  const [data, setData] = useState({nickName: '', password: '', passwordConfirm: ''})\r\n  const { nickName, password, passwordConfirm } = data;\r\n\r\n  useEffect(() => {\r\n    \r\n    localStorage?.token && !isAuth && checkAuth();\r\n    isAuth && (() => {\r\n      \r\n      const { from } = location.state || { from: {pathname: \"/test\"} }\r\n      history.replace(from)\r\n    })();\r\n\r\n    return () => {\r\n\r\n    }\r\n  })\r\n\r\n\r\n  function sumbitHandl(ev) {\r\n    ev.preventDefault();\r\n    let errors = false;\r\n\r\n    if(password.length < 3) {\r\n      errors = true\r\n      message.error('Password too short', 3);\r\n    }\r\n    if(nickName.length < 3) {\r\n      errors = true\r\n      message.error('Nickname too short', 3);\r\n    }\r\n\r\n    if(workPlace === 'create') {\r\n      if(passwordConfirm !== password) {\r\n        errors = true;\r\n        message.error('Passwords are not equal', 3);\r\n      }\r\n      !errors && createUser(data);\r\n    } else {\r\n      !errors && loginUser(data);\r\n    }\r\n  }\r\n\r\n  const chechProps = {\r\n    fValue: 'LOGIN',\r\n    sValue: 'CREATE NEW',\r\n    fHandl: () => setWorkPlace('login'),\r\n    sHandl: () => setWorkPlace('create'),\r\n    checkParam: workPlace === 'login'\r\n  }\r\n\r\n  return (\r\n    <div className='login'>\r\n      <div className='login__checkTags'>\r\n        <CheckTags {...chechProps} />\r\n      </div>\r\n      <div className='login__form'>\r\n        <form onSubmit={sumbitHandl}>\r\n          <div className={classNames('formElement')}>\r\n            <Input \r\n              placeholder={'Nickname'}\r\n              onChange={ev => setData({...data, nickName: ev.target.value})}\r\n              value={nickName}/>\r\n          </div>\r\n          <div className={classNames('formElement')}>\r\n            <Input.Password \r\n              placeholder={'Password'}\r\n              onChange={ev => setData({...data, password: ev.target.value})}\r\n              value={password}/>\r\n          </div>\r\n          {\r\n            workPlace === 'create' &&\r\n            <div className={classNames('formElement')}>\r\n              <Input.Password \r\n                placeholder={'Password confirm'}\r\n                onChange={ev => setData({...data, passwordConfirm: ev.target.value})}\r\n                value={passwordConfirm}/>\r\n            </div>\r\n          }\r\n          <div className={classNames('formElement', 'login__form_submit')}>\r\n            <Button onClick={ev => console.log('click')} htmlType=\"submit\">\r\n              {\"SEND DATA\"}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({dialogs: {isAuth}}) => ({\r\n  isAuth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  createUser, loginUser, checkAuth\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport { TextReducer } from '@@/containers'\r\n\r\nimport './Dialog.scss';\r\n\r\nconst  DialogView = (\r\n  {\r\n    imgPlug, \r\n    name, \r\n    messange, \r\n    infoCount, \r\n    online,\r\n    messageDls,\r\n    authorIsYou,\r\n    isSearchPeopleMod = false,\r\n    isChoosen,\r\n\r\n    clickHandler\r\n  }) => {\r\n  return (\r\n    <section className={classNames(\r\n      'dialog', isChoosen \r\n      ? 'dialog__isChoosen' : null\r\n    )} \r\n      onClick={clickHandler}>\r\n      <div className='dialog__leftPart'>\r\n        <div className='dialog__leftPart_imgPlug'>{imgPlug}</div>\r\n        {online && <div className='dialog__leftPart_online'>{''}</div>}\r\n      </div>\r\n      <div className='dialog__rightPart'>\r\n        <div className='dialog__rightPart_name'>\r\n          {name}\r\n        </div>\r\n        {!isSearchPeopleMod\r\n          ? <div className='dialog__rightPart_message'>\r\n              <div className='dialog__rightPart_message-payload'>\r\n                <TextReducer text={`${authorIsYou?'You: ':''}${messange}`} />\r\n              </div>\r\n              <div className='infoCountWrapper'>\r\n                <div className={`dialog__rightPart_message${messageDls}`}>\r\n                  {infoCount}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          : null\r\n        }\r\n        \r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DialogView\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport View from '../view'\r\n\r\nexport const Dialog = (\r\n  {\r\n    dialog,\r\n    messages,\r\n    me,\r\n    choosenId,\r\n\r\n    onClick\r\n  }) => {\r\n  \r\n  // Все это.. можно и нужно перенести в редюсер\r\n  let showData;\r\n  const showTarget = dialog.author['_id'] === me['_id']\r\n  ? dialog.partner : dialog.author\r\n  \r\n  const isChoosen = dialog['_id'] === choosenId;\r\n\r\n  if(messages.length) {\r\n\r\n    const readed = messages[messages.length-1].readed;\r\n    const authorIsYou = messages[messages.length-1].author === me['_id'];\r\n\r\n    function getMessageDls() {\r\n      const numbReaded = +readed,\r\n      numbAuthorIsYou = +authorIsYou,\r\n      chooseTree = {\r\n        '0': {'0': '-infoCount', '1': '-none'},\r\n        '1': {'0': '-unreaded', '1': '-none'}\r\n      }\r\n      return chooseTree[numbAuthorIsYou][numbReaded]\r\n    }\r\n    const messageDls = getMessageDls();\r\n    \r\n    function getUnreadedCount() {\r\n      \r\n      const revMessages = messages.reverse();\r\n\r\n      let resCount = 0\r\n      let deathFlag = false;\r\n      while(!deathFlag && (resCount < revMessages.length)) {\r\n        if(!revMessages[resCount].readed) {\r\n          resCount++;\r\n        } else {\r\n          deathFlag = true\r\n        }\r\n      }\r\n      if(resCount >= 10) {\r\n        return '9+'\r\n      } else return resCount;\r\n    }\r\n\r\n    showData = {\r\n      imgPlug: showTarget.nickName[0],\r\n      name: showTarget.nickName,\r\n      messange: messages[messages.length-1].text,\r\n      infoCount: messageDls === '-infoCount' ? getUnreadedCount() : null,\r\n      online: showTarget.online,\r\n      authorIsYou, \r\n      messageDls,\r\n      isChoosen\r\n    }\r\n\r\n  } else {\r\n    showData = {\r\n      imgPlug: showTarget.nickName[0],\r\n      name: showTarget.nickName,\r\n      messange: '',\r\n      infoCount: null,\r\n      online: showTarget.online,\r\n      authorIsYou: false,\r\n      messageDls: '-none',\r\n      isChoosen\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <View {...showData} \r\n      clickHandler={() => !isChoosen && onClick(dialog['_id'])} \r\n      />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dialog)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport View from '../view'\r\n\r\nexport const SearchPeopleWrapper = (\r\n  {\r\n    user,\r\n    choosenUserId,\r\n\r\n    onClick\r\n  }) => {\r\n  \r\n  // Все это.. можно и нужно перенести в редюсер\r\n  \r\n  const showTarget = user\r\n\r\n  const isChoosen = user['_id'] === choosenUserId;\r\n\r\n  const showData = {\r\n    imgPlug: showTarget.nickName[0],\r\n    name: showTarget.nickName,\r\n    clickHandler: () => !isChoosen && onClick(showTarget['_id']),\r\n    online: showTarget.online,\r\n    isSearchPeopleMod: true,\r\n    isChoosen\r\n  }\r\n\r\n  return (\r\n    <View {...showData} />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPeopleWrapper)\r\n","import React, { useRef, useEffect, useState } from 'react'\r\n\r\nimport './TextReducer.scss'\r\n\r\n const TextReducer = ({text}) => {\r\n  const wrapperRef = useRef(null);\r\n  const targetRef = useRef(null);\r\n  const [originalText, setOriginalText] = useState(null);\r\n  const [textData, setTextData] = useState({\r\n    payload: text,\r\n    ready: false, \r\n    changed: false,\r\n  })\r\n\r\n  useEffect(() => {\r\n    if(originalText !== text) { // ручное обновление главного пропса\r\n      setOriginalText(text);\r\n      setTextData({payload: text, ready: false, changed: false})\r\n    }\r\n\r\n    const { clientHeight: wrapperH } = wrapperRef.current,\r\n    { clientHeight: targetH } = targetRef.current,\r\n    {payload, ready, changed} = textData;\r\n\r\n    if(targetH > wrapperH) {\r\n      let resStr = payload.substring(0, 0.85*payload.length/(targetH/wrapperH));\r\n      setTextData({...textData, payload: resStr, changed: true })\r\n    } else if(!ready) {\r\n      let textWithSpace = payload\r\n      textWithSpace = changed \r\n        ? `${textWithSpace.substring(0, payload.length-3)}...`\r\n        : textWithSpace;\r\n      setTextData({...textData, payload:textWithSpace, ready: true})\r\n    }\r\n\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <div ref={wrapperRef} className='textReducer'>\r\n      <div ref={targetRef} className='textReducer__target'>\r\n        {textData.payload}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextReducer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Search } from '@@/components'\r\nimport { ChooseBoard } from '@@/containers'\r\n\r\nimport './Main.scss';\r\n\r\nconst CPMain = ({microEvent}) => {\r\n  return (\r\n    <section className={'cPMain'}>\r\n      <div className={'cPMain_leftSpace'} />\r\n      <div className={'cPMain_main'}>\r\n        <Search />\r\n        <ChooseBoard />\r\n        {/* <button onClick={() => microEvent()}>\r\n        {'ChoosePage'}\r\n        </button>\r\n        <Link to='/result'>\r\n          {'toResult'}\r\n        </Link> */}\r\n      </div>\r\n      <div className={'cPMain_rightSpace'} />\r\n    </section>\r\n  )\r\n}\r\n\r\nCPMain.propTypes = {\r\n\r\n}\r\n\r\nexport default CPMain\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CPHeader, CPMain } from './layout'\r\n\r\nimport { microEvent } from '@/actions';\r\n\r\nimport './ChoosePage.scss'\r\n\r\nconst ChoosePage = ({microEvent, ...another}) => {\r\n\r\n  console.log('ANO_DEBUG: ', another);\r\n\r\n  return (\r\n    <section className={'choosePage'}>\r\n      {/* <div className={'choosePage_header'}>\r\n        \r\n      </div> */}\r\n      <CPHeader />\r\n      <CPMain />\r\n      {/* <div className={'choosePage_main'}>\r\n        \r\n      </div> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nChoosePage.propTypes = {\r\n\r\n}\r\n\r\nexport default connect(state => ({...state}), { microEvent })(ChoosePage)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PreviewPage = props => {\r\n  return (\r\n    <div>\r\n      {\"Preview\"}\r\n    </div>\r\n  )\r\n}\r\n\r\nPreviewPage.propTypes = {\r\n\r\n}\r\n\r\nexport default PreviewPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst ResultPage = ({elements}) => {\r\n  \r\n  debugger\r\n  const data = [];\r\n\r\n  let i = -1;\r\n  const propsArr = Object.keys(elements)\r\n  while(++i < propsArr.length){\r\n    data.push(\r\n      <div>\r\n        {`${propsArr[i]}`}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\"Result\"}\r\n      <Link to={'/main'} >{\"Main\"}</Link>\r\n      {data}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nResultPage.propTypes = {\r\n\r\n}\r\n\r\nexport default connect((\r\n  {products: {microEls}}\r\n  ) => (\r\n    {elements: microEls.elements\r\n    }))(ResultPage); \r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { privateMsg, joinToRoom, getMsgs } from '@/actions'\r\n\r\nimport './TestPage.scss';\r\n\r\nexport const TestPage = (\r\n  { isAuth,\r\n\r\n    privateMsg, \r\n    joinToRoom, \r\n    getMsgs \r\n  }) => {\r\n\r\n  const [msg, setMsg] = useState('Hey, Zues');\r\n  const [addres, setAddres] = useState('Olimpia');\r\n\r\n  function sendHandler() {\r\n    privateMsg({msg, addres})\r\n  }\r\n\r\n  const [room, setRoom] = useState('Olimpia');\r\n\r\n  function joinHandler() {\r\n    joinToRoom({room})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className='testPage'>\r\n        <div className='testPage_msg'>\r\n          <input value={msg} onChange={(ev) => setMsg(ev.target.value)} placeholder={'Msg'}/>\r\n          <input value={addres} onChange={(ev) => setAddres(ev.target.value)} placeholder={'Addres'} />\r\n          <button onClick={sendHandler}>SEND</button>\r\n        </div>\r\n        <div className='testPage_msg'>\r\n          <input value={room} onChange={(ev) => setRoom(ev.target.value)} placeholder={'Room'} />\r\n          <button onClick={joinHandler}>JOIN</button>\r\n        </div>\r\n        <div>\r\n          <button onClick={() => {console.clear(); getMsgs()}}>GET_MSGS</button>\r\n        </div>\r\n      </section>\r\n      {!isAuth && <Redirect to={'/login'} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({dialogs:{isAuth}}) => ({\r\n  isAuth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  privateMsg, joinToRoom, getMsgs\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPage)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Login } from '@@/containers'\r\n\r\nimport './LoginPage.scss'\r\n\r\nfunction LoginPage({isAuth}) {\r\n  return (\r\n    <section className='loginPage'>\r\n      {/* {isAuth && <Redirect to={'/test'} />} */}\r\n      <Link to='/test'>{\"/Test\"}</Link>\r\n      <Login />\r\n    </section>\r\n  )\r\n}\r\n\r\nLoginPage.propTypes = {\r\n\r\n}\r\n\r\nexport default connect(({dialogs: {isAuth}}) => ({isAuth}))(LoginPage)\r\n\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\n\r\nimport { Input, Button } from 'antd'\r\nimport { Message, DateElement } from '@@/components'\r\n\r\nimport { createMessage } from '@/actions'\r\n\r\nimport './Chat.scss'\r\n\r\nconst { TextArea } = Input\r\n\r\nexport const Chat = (\r\n  {\r\n  choosenDialogId,\r\n  readyMessengesData,\r\n  dialogs, \r\n  newDialogTargetId,\r\n\r\n  createMessage,\r\n}) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const dialogIsPicked = choosenDialogId !== null\r\n\r\n  function submitHandler () {\r\n    if (dialogIsPicked) {\r\n      createMessage(inputValue);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  const messages = (() => {\r\n    const res = [];\r\n    readyMessengesData\r\n    .forEach(({date, messages}) => {\r\n      res.push( <DateElement date={date} />);\r\n      messages\r\n      .forEach(data => {\r\n        res.push( <Message {...data} />)\r\n      })\r\n    });\r\n    return res;\r\n  })()\r\n\r\n  // function createDialogHandler () {\r\n  //   if(!dialogs.some(({dialog: {author, partner}}) => {\r\n  //     return ((newDialogTargetId === author['_id']) || (newDialogTargetId === partner['_id']))\r\n  //   })) {\r\n  //     createNewDialog()\r\n  //   }\r\n  // }\r\n  \r\n  return (\r\n    <section className='chat'>\r\n      <div className='chat__main'>\r\n        <div className={classNames(\r\n          'chat__main_wrapper', \r\n          !dialogIsPicked ? 'chat__main_wrapper-help' : null\r\n          )}>\r\n          { dialogIsPicked\r\n           ? messages // [...messages, ...messages, ...messages]\r\n           : 'Pick dialog'\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className='chat__inputArea'>\r\n        <div className='chat__inputArea_textArea'>\r\n          <TextArea autoSize \r\n            // onFocus={createDialogHandler}\r\n            onChange={ev => setInputValue(ev.target.value)}\r\n            value={inputValue} \r\n          />\r\n        </div>\r\n        <div className='chat__inputArea_button'>\r\n          <Button onClick={submitHandler}>Send</Button>\r\n        </div>\r\n      </div>\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (\r\n  {dialogs: \r\n    {\r\n      choosenDialogId, \r\n      readyMessengesData, \r\n      dialogs, \r\n      newDialogTargetId,\r\n    }}) => ({\r\n  choosenDialogId, \r\n  readyMessengesData,\r\n  dialogs, \r\n  newDialogTargetId,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  createMessage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\n\r\nimport { pickDialog, createNewDialog } from '@/actions'\r\n\r\nimport { Dialog, SearchPeople } from '@@/containers'\r\n\r\nimport './DialogsTab.scss'\r\n\r\nexport const DialogsTab = (\r\n  {\r\n    dialogs,\r\n    user,\r\n    dialogTabMod, \r\n    searchPeople,\r\n    choosenDialogId,\r\n    v,\r\n\r\n    pickDialog,\r\n    createNewDialog\r\n  }) => {\r\n\r\n  const meObj = {\r\n    _id: '222',\r\n    loginName: 'Ares',\r\n    nickName: 'Ares416',\r\n    last_seen: Date.now(),\r\n    online: true,\r\n  }\r\n\r\n  const testDialogData1 = {\r\n    dialog: {\r\n      _id: '111', \r\n      author: {\r\n        _id: '222',\r\n        loginName: 'Ares',\r\n        nickName: 'Ares416',\r\n        last_seen: Date.now(),\r\n        online: true,\r\n      },\r\n      partner: {\r\n        _id: '333',\r\n        loginName: 'Posidone',\r\n        nickName: 'Posidone',\r\n        last_seen: Date.now(),\r\n        online: true,\r\n      }\r\n    },\r\n    messages: [\r\n      {\r\n        _id: '4444',\r\n        text: 'Can you read lorem text?',\r\n        author: '222',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '2332',\r\n        text: 'Yes, Lor em text is so strange 1 2 3 4 5 6 7 8 9 10 11 12 13 14',\r\n        author: '222',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      }\r\n    ]\r\n  }\r\n\r\n  const testDialogData2 = {\r\n    dialog: {\r\n      _id: '111', \r\n      author: {\r\n        _id: '222',\r\n        loginName: 'Ares',\r\n        nickName: 'Ares416',\r\n        last_seen: Date.now(),\r\n        online: true,\r\n      },\r\n      partner: {\r\n        _id: '4244',\r\n        loginName: 'RealGod',\r\n        nickName: 'Aphina',\r\n        last_seen: Date.now(),\r\n        online: true,\r\n      }\r\n    },\r\n    messages: [\r\n      {\r\n        _id: '4444',\r\n        text: 'Can you read lorem text?',\r\n        author: '222',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      },\r\n      {\r\n        _id: '23323',\r\n        text: 'Do you know how work Math.random() ?',\r\n        author: '4244',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: false\r\n      }\r\n    ]\r\n  }\r\n\r\n  const testDialogData3 = {\r\n    dialog: {\r\n      _id: '111', \r\n      author: {\r\n        _id: '777',\r\n        loginName: 'SunOfKronos',\r\n        nickName: 'Zues',\r\n        last_seen: Date.now(),\r\n        online: false,\r\n      } ,\r\n      partner: \r\n      {\r\n        _id: '222',\r\n        loginName: 'Ares',\r\n        nickName: 'Ares416',\r\n        last_seen: Date.now(),\r\n        online: true,\r\n      }\r\n    },\r\n    messages: [\r\n      {\r\n        _id: '4444',\r\n        text: 'Can you read lorem text?',\r\n        author: '222',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '777',\r\n        text: 'Again that man, try to push me..',\r\n        author: '777',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: true\r\n      }\r\n    ]\r\n  }\r\n\r\n  const testDialogData4 = {\r\n    dialog: {\r\n      _id: '416', \r\n      author: {\r\n        _id: '55555',\r\n        loginName: 'mainBuilder',\r\n        nickName: 'Hefest',\r\n        last_seen: Date.now(),\r\n        online: false,\r\n      } ,\r\n      partner: \r\n      {\r\n        _id: '222',\r\n        loginName: 'Ares',\r\n        nickName: 'Ares416',\r\n        last_seen: Date.now(),\r\n        online: true,\r\n      }\r\n    },\r\n    messages: [\r\n      {\r\n        _id: '4444',\r\n        text: 'Can you read lorem text?',\r\n        author: '55555',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: true\r\n      },\r\n      {\r\n        _id: '777',\r\n        text: 'That metall looks pretty good',\r\n        author: '222',\r\n        poll: '',\r\n        createdAt: Date.now(),\r\n        readed: true\r\n      }\r\n    ]\r\n  }\r\n\r\n  const clickHandler = _id => pickDialog(_id)\r\n\r\n  const dialogsComponents = dialogs.map(dialogData => \r\n    <Dialog {...dialogData} \r\n    me={user} \r\n    onClick={clickHandler} \r\n    choosenId={choosenDialogId} \r\n    />)\r\n\r\n  const showDialogs = dialogsComponents.length;\r\n  \r\n  const searchPeopleClickHandler = (id) => {\r\n    // Этот код нужно вынести на сервер, если я буду пуллить диалоги\r\n    let dialogId = '';\r\n    if(dialogs.some(({dialog: {author, partner, _id}}) => {\r\n      if(author['_id'] === id || partner['_id'] === id) {\r\n        dialogId = _id;\r\n        return true\r\n      }\r\n    })) {\r\n      pickDialog(dialogId)\r\n    } else {\r\n      createNewDialog(id)\r\n    }\r\n    \r\n  }\r\n  const choosenUserId = (() => {\r\n    let res = null\r\n    let i = -1;\r\n    while(++i < dialogs.length) {\r\n      const { dialog: {author, partner, _id} } = dialogs[i];\r\n      if(_id === choosenDialogId) {\r\n        if(author['_id'] === user['_id']) {\r\n          res = partner['_id']\r\n        } else {\r\n          res = author['_id']\r\n        }\r\n      }\r\n    }\r\n\r\n    return res;\r\n  })()\r\n\r\n  const searchPeoples = searchPeople.map(searchUser => {\r\n    return searchUser['_id'] !== user['_id']\r\n    ? \r\n    <SearchPeople user={searchUser} \r\n    onClick={searchPeopleClickHandler} \r\n    choosenUserId={choosenUserId} \r\n    />\r\n    : null\r\n  })\r\n\r\n  console.log('DIALOGS_COMPONENT:', dialogsComponents)\r\n\r\n  return (\r\n    <section className='dialogsTab'>\r\n      {\r\n        dialogTabMod === 'search'\r\n        ?\r\n        <div className='dialogsTab__wrapper'>\r\n          {searchPeoples}\r\n        </div>\r\n        :\r\n        <div className={classNames(\r\n          'dialogsTab__wrapper', \r\n          showDialogs ? null : 'dialogsTab__wrapper-help',\r\n        )}>\r\n          {showDialogs\r\n            ? dialogsComponents\r\n            : \"Find some-body\"\r\n          } \r\n          {/* <Dialog {...testDialogData1} me={meObj} onClick={clickHandler}/>\r\n          <Dialog {...testDialogData2} me={meObj} onClick={clickHandler}/>\r\n          <Dialog {...testDialogData3} me={meObj} onClick={clickHandler}/>\r\n          <Dialog {...testDialogData4} me={meObj} onClick={clickHandler}/> */}\r\n        </div>\r\n      }\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (\r\n  {dialogs: {\r\n    dialogs, \r\n    user, \r\n    dialogTabMod, \r\n    searchPeople,\r\n    choosenDialogId,\r\n    v\r\n  }\r\n  }) => ({\r\n  dialogs, \r\n  user, \r\n  dialogTabMod, \r\n  searchPeople,\r\n  choosenDialogId,\r\n  v,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  pickDialog, createNewDialog\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsTab)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './Navigation.scss'\r\n\r\nexport const Navigation = (props) => {\r\n  return (\r\n    <section className='navigation'>\r\n      {\"Navigator\"}\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './ChatHeader.scss'\r\n\r\nexport const ChatHeader = (props) => {\r\n  return (\r\n    <section className={'chatHeader'}>\r\n      <div className='chatHeader__leftPart'>\r\n        <div className='chatHeader__leftPart_partnerName'>\r\n          {\"Hefest\"}\r\n        </div>\r\n        <div className='chatHeader__leftPart_lastSeenDate'>\r\n          {'last seen'}\r\n        </div>\r\n      </div>\r\n      <div className='chatHeader__rightPart'>\r\n        {''}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatHeader)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Input } from 'antd'\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nimport { setDialogTabMod } from '@/actions'\r\n\r\nimport './DialogsSearch.scss'\r\n\r\nexport const DialogsSearch = (\r\n  {\r\n    dialogTabMod,\r\n\r\n    setDialogTabMod\r\n  }) => {\r\n\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  function focusHandler (ev) {\r\n    setDialogTabMod('search')\r\n    console.log('Focuse_ev:', ev)\r\n  }\r\n\r\n  function changeHandler (ev) {\r\n    setSearchValue(ev.target.value)\r\n  }\r\n\r\n  function closeClickHandler(ev) {\r\n    setDialogTabMod('base')\r\n    setSearchValue('')\r\n  }\r\n\r\n  const isSearch = dialogTabMod === 'search'\r\n\r\n  return (\r\n    <section className={'dialogsSearch'}>\r\n      <Input\r\n       placeholder={'Search persons'} \r\n       bordered={false}  \r\n       onFocus={focusHandler}\r\n       onChange={changeHandler}\r\n       value={searchValue}\r\n       onPressEnter={ev => console.log('PRESS_ENTER')}\r\n       />\r\n\r\n      <div className={'dialogsSearch__stopSearch'}>\r\n        {\r\n          isSearch \r\n          ? <div \r\n              className={'dialogsSearch__stopSearch_icon'} \r\n              onClick={closeClickHandler}>\r\n              <CloseOutlined />\r\n            </div>\r\n          : null\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({dialogs: {dialogTabMod}}) => ({\r\n  dialogTabMod\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setDialogTabMod\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsSearch)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, useLocation } from 'react-router-dom'\r\n\r\nimport { Chat, ChatHeader, DialogsTab, DialogsSearch, Navigation } from './layout'\r\n\r\nimport './MessangerPage.scss'\r\n\r\nexport const MessangerPage = ({isAuth}) => {\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <>\r\n      <section className='messangerPage'>\r\n        <div className='messangerPage_main'>\r\n          <div className='messangerPage_main__header'>\r\n            <Navigation />\r\n          </div>\r\n          <div className='messangerPage_main__chat'>\r\n            <div className='messangerPage_main__chat-left'>\r\n              <DialogsSearch />\r\n              <DialogsTab />\r\n            </div>\r\n            <div className='messangerPage_main__chat-right'>\r\n              <ChatHeader />\r\n              <Chat />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {!isAuth && <Redirect to={{pathname: \"/login\", state: { from: location.pathname}}} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({dialogs: {isAuth}}) => ({\r\n  isAuth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessangerPage)\r\n","import React from 'react';\r\nimport { \r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  } from 'react-router-dom'\r\n\r\nimport { \r\n  PreviewPage, \r\n  ResultPage, \r\n  ChoosePage, \r\n  TestPage, \r\n  LoginPage, \r\n  MessengerPage,\r\n\r\n} from '@@/pages'\r\n\r\nimport './styles/index.scss';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className='pageWrapper'>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <PreviewPage />\r\n          </Route>\r\n          <Route exact path=\"/result\">\r\n            <ResultPage />\r\n          </Route>\r\n          <Route path=\"/main\">\r\n            <ChoosePage />\r\n          </Route>\r\n          <Route exact path=\"/dude/*\">\r\n            <div>{\"hey dude\"}</div>\r\n          </Route>\r\n          <Route exact path=\"/test\">\r\n            <TestPage />\r\n          </Route>\r\n          <Route exact path='/login'>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route exact path='/messenger'>\r\n            <MessengerPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport { render } from 'react-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport store from './store';\r\n\r\nimport App from './view/App'\r\n\r\n\r\n\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}